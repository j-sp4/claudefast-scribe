const fs = require('fs');
const path = require('path');
const repoRoot = path.resolve(__dirname, '..');
const docsArchitecturePath = path.join(repoRoot, 'docs', 'app', 'architecture', 'page.tsx');

function update() {
  if (!fs.existsSync(docsArchitecturePath)) {
    console.error('docs architecture page not found at', docsArchitecturePath);
    process.exit(1);
  }
  const src = fs.readFileSync(docsArchitecturePath, 'utf8');
  const markerStart = '<!-- sync:autogenerated:start -->';
  const markerEnd = '<!-- sync:autogenerated:end -->';
  const now = new Date().toISOString();
  const snippet = `\n{/* ${markerStart} */}\n<p style={{fontSize: '0.8em', color: '#888'}}>Auto-updated from server change at: ${now}</p>\n{/* ${markerEnd} */}`;

  let next;
  if (src.includes(markerStart) && src.includes(markerEnd)) {
    next = src.replace(new RegExp(`\\{\\/\\* ${markerStart} \\*\\/\\}[\\s\\S]*?\\{\\/\\* ${markerEnd} \\*\\/\\}`), snippet);
  } else {
    const closingTag = '</ContentLayout>';
    const insertAt = src.lastIndexOf(closingTag);
    if (insertAt !== -1) {
      next = src.slice(0, insertAt) + snippet + '\n' + src.slice(insertAt);
    } else {
      next = src + '\n' + snippet + '\n';
    }
  }

  if (next !== src) {
    fs.writeFileSync(docsArchitecturePath, next, 'utf8');
    console.log('Updated docs architecture page with timestamp.');
  } else {
    console.log('No changes applied to docs architecture page.');
  }
}

update();
